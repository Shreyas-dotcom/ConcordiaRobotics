{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nrotation = Rotation(Ports.PORT10, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n# region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain = Brain()\n\n# Robot configuration code\n\n# Left Drive \nleft_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_6_1, True)\nleft_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_6_1, True)\nleft_motor_c = Motor(Ports.PORT3, GearSetting.RATIO_6_1, True)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b, left_motor_c)\n\n# Right Drive\nright_motor_a = Motor(Ports.PORT4, GearSetting.RATIO_6_1, False)\nright_motor_b = Motor(Ports.PORT5, GearSetting.RATIO_6_1, False)\nright_motor_c = Motor(Ports.PORT6, GearSetting.RATIO_6_1, False)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b, right_motor_c)\n\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\n\n# Twin 5.5w motors\nmotor_group_8_motor_a = Motor(Ports.PORT8, GearSetting.RATIO_18_1, False)\nmotor_group_8_motor_b = Motor(Ports.PORT9, GearSetting.RATIO_18_1, True)\nmotor_group_8 = MotorGroup(motor_group_8_motor_a, motor_group_8_motor_b)\n\n# Intake Motor\nIntake = Motor(Ports.PORT7, GearSetting.RATIO_6_1, False)\nIntake.set_velocity(90, PERCENT)\n\n# Controller Initialization\ncontroller_1 = Controller()\n\n# Speed Settings\nleft_drive_smart.set_velocity(100, PERCENT)\nright_drive_smart.set_velocity(100, PERCENT)\nmotor_group_8.set_velocity(100, PERCENT)\n\n# Define Piston1 (assuming it uses a digital output port)\nPiston1 = DigitalOut(brain.three_wire_port.a)\n\n# Main Loop\nwhile True:\n    # Drive logic\n    left_drive_smart.spin(FORWARD, controller_1.axis3.position(), VOLT)\n    right_drive_smart.spin(FORWARD, controller_1.axis2.position(), VOLT)\n\n    # Intake control logic\n    if controller_1.buttonR1.pressing():\n        Intake.spin(REVERSE)\n    elif controller_1.buttonR2.pressing():\n        Intake.spin(FORWARD)\n    else:\n        Intake.stop()\n\n    # Motor group control logic\n    if controller_1.buttonL1.pressing():\n        motor_group_8.spin(FORWARD)\n    elif controller_1.buttonL2.pressing():\n        motor_group_8.spin(REVERSE)\n    else: \n        motor_group_8.stop()\n\n    # Additional control for motor group based on rotation sensor\n    if controller_1.buttonL1.pressing() and controller_1.buttonL2.pressing():\n        if rotation.position() > 0:\n            motor_group_8.spin(FORWARD)\n        elif rotation.position() < 0:\n            motor_group_8.spin(REVERSE)\n        else:   \n            motor_group_8.stop()  \n\n    # Piston control logic\n    if controller_1.buttonUp.pressing():\n        Piston1.set(True)\n    if controller_1.buttonDown.pressing():\n        Piston1.set(False)\n\n    # Uncomment if Piston2 is defined\n    # if controller_1.buttonL1.pressing():\n    #     Piston2.set(True)\n    # if controller_1.buttonL2.pressing():\n    #     Piston2.set(False)","textLanguage":"python","robotConfig":[{"port":[11],"name":"rotation_11","customName":false,"deviceType":"Rotation","deviceClass":"rotation","setting":{"reversed":"false"}}],"slot":3,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}